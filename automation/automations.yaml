###
### FRONTEND
###

- id: set_theme_at_startup
  alias: 'Set theme at startup'
  trigger:
    - platform: homeassistant
      event: start
  action:
    service: frontend.set_theme
    data_template:
      name: >-
        {% if states.input_select.theme_select is defined %}
          {{ states.input_select.theme_select.state }}
        {% else %}'default'{% endif %}

- id: set_theme_at_sunrise
  alias: 'Set theme at sunrise'
  trigger:
    - platform: sun
      event: sunrise
      offset: "+00:00:00"
  action:
    service: frontend.set_theme
    data:
      name: yellow

- id: set_theme_at_sunset
  alias: 'Set theme at sunset'
  trigger:
    - platform: sun
      event: sunset
      offset: "+00:00:00"
  action:
    service: frontend.set_theme
    data:
      name: gray

- id: set_theme_select
  alias: 'Set theme'
  trigger:
    - platform: state
      entity_id: input_select.theme_select
  action:
    service: frontend.set_theme
    data_template: 
      name: >
        {{ states.input_select.theme_select.state }}

###
### INTERNET
###

- id: internet_test_count
  alias: internet_test_count
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.internet_test
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.internet_test_state.state == 'on' }}
  action:
    - service: counter.increment
      entity_id: counter.internet_test_counter

- id: internet_slow
  alias: internet_slow
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.internet_slow
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.internet_slow.state == 'on' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Internet slow at
          {{ states.sensor.internet_test.attributes.date | int | timestamp_custom("%a %b %d %I:%M %p") }}
        notification_id: internet_slow
        message: >
          Current: {{ states.sensor.internet_test_receive.state }} Mbps; 
          average {{ states.sensor.internet_receive_mean.state }} Mbps;
          stdev {{ states.sensor.internet_receive_statistics_mean.attributes.standard_deviation }} Mbps
    - service: mqtt.publish
      data_template:
        topic: 'status/internet/download'
        retain: false
        payload: >
          {{ states.sensor.internet_receive_statistics_mean.attributes }}

- id: internet_slow_dismiss
  alias: internet_slow_dismiss
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.internet_slow
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.internet_slow.state == 'off' }}
  action:
    - service: persistent_notification.dismiss
      data_template:
        notification_id: internet_slow

- id: internet_fast
  alias: internet_fast
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.internet_fast
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.internet_fast.state == 'on' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Internet fast at
          {{ states.sensor.internet_test.attributes.date | int | timestamp_custom("%a %b %d %I:%M %p") }}
        notification_id: internet_fast
        message: >
          Current: {{ states.sensor.internet_test_receive.state }} Mbps; 
          average {{ states.sensor.internet_receive_mean.state }} Mbps;
          stdev {{ states.sensor.internet_receive_statistics_mean.attributes.standard_deviation }} Mbps
    - service: mqtt.publish
      data_template:
        topic: 'status/internet/download'
        retain: false
        payload: >
          {{ states.sensor.internet_receive_statistics_mean.attributes }}

- id: internet_fast_dismiss
  alias: internet_fast_dismiss
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.internet_fast
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.internet_fast.state == 'off' }}
  action:
    - service: persistent_notification.dismiss
      data_template:
        notification_id: internet_fast

- id: internet_slow_persistent
  alias: internet_slow_persistent
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.internet_slow_persistent
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.internet_slow_persistent.state == 'on' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Internet slowing at
          {{ states.sensor.internet_test.attributes.date | int | timestamp_custom("%a %b %d %I:%M %p") }}
        notification_id: internet_slow
        message: >
          Current: {{ states.sensor.internet_test_receive.state }} Mbps; 
          average {{ states.sensor.internet_receive_mean.state }} Mbps;
          average stdev {{ states.sensor.internet_receive_stdev_mean.state }} Mbps
    - service: mqtt.publish
      data_template:
        topic: 'status/internet/download/stdev'
        retain: false
        payload: >
          {{ states.sensor.internet_receive_stdev_mean.attributes }}

- id: internet_fast_persistent
  alias: internet_fast_persistent
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.internet_fast_persistent
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.internet_fast_persistent.state == 'on' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Internet improving at
          {{ states.sensor.internet_test.attributes.date | int | timestamp_custom("%a %b %d %I:%M %p") }}
        notification_id: internet_fast
        message: >
          Current: {{ states.sensor.internet_test_receive.state }} Mbps; 
          average {{ states.sensor.internet_receive_mean.state }} Mbps;
          average stdev {{ states.sensor.internet_receive_stdev_mean.state }} Mbps
    - service: mqtt.publish
      data_template:
        topic: 'status/internet/download/stdev'
        retain: false
        payload: >
          {{ states.sensor.internet_receive_stdev_mean.attributes }}

###
### YOLO2MSGHUB (from automation/yolo2msghub/)
###

- id: yolo2msghub_counter
  alias: yolo2msghub_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.yolo2msghub_event
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.yolo2msghub_state.state == 'on' }}
  action:
    - service: counter.increment
      entity_id: counter.yolo2msghub_counter

- id: yolo2msghub_client_low
  alias: yolo2msghub_client_low
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.yolo2msghub_client_low
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.yolo2msghub_client_low.state == 'on' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Activity low at
          {{ states.sensor.yolo2msghub_event.attributes.yolo2msghub.date | int | timestamp_custom("%a %b %d %I:%M %p") }}
        notification_id: yolo2msghub_client_low
        message: >
          Current: {{ states.sensor.yolo2msghub_client_count.state }} clients; 
          average {{ states.sensor.yolo2msghub_client_count_mean.state }} clients;
          stdev {{ states.sensor.yolo2msghub_client_count_statistics_mean.attributes.standard_deviation }} clients
    - service: mqtt.publish
      data_template:
        topic: 'status/yolo2msghub_clients/download'
        retain: false
        payload: >
          {{ states.sensor.yolo2msghub_client_count_statistics_mean.attributes }}

- id: yolo2msghub_client_low_dismiss
  alias: yolo2msghub_client_low_dismiss
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.yolo2msghub_client_low
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.yolo2msghub_client_low.state == 'off' }}
  action:
    - service: persistent_notification.dismiss
      data_template:
        notification_id: yolo2msghub_client_low

- id: yolo2msghub_client_high
  alias: yolo2msghub_client_high
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.yolo2msghub_client_high
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.yolo2msghub_client_high.state == 'on' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Activity high at
          {{ states.sensor.yolo2msghub_event.attributes.yolo2msghub.date | int | timestamp_custom("%a %b %d %I:%M %p") }}
        notification_id: yolo2msghub_client_high
        message: >
          Current: {{ states.sensor.yolo2msghub_client_count.state }} clients; 
          average {{ states.sensor.yolo2msghub_client_count_mean.state }} clients;
          stdev {{ states.sensor.yolo2msghub_client_count_statistics_mean.attributes.standard_deviation }} clients
    - service: mqtt.publish
      data_template:
        topic: 'status/yolo2msghub_clients/download'
        retain: false
        payload: >
          {{ states.sensor.yolo2msghub_client_count_statistics_mean.attributes }}

- id: yolo2msghub_client_high_dismiss
  alias: yolo2msghub_client_high_dismiss
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.yolo2msghub_client_high
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.yolo2msghub_client_high.state == 'off' }}
  action:
    - service: persistent_notification.dismiss
      data_template:
        notification_id: yolo2msghub_client_high

- id: yolo2msghub_client_low_persistent
  alias: yolo2msghub_client_low_persistent
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.yolo2msghub_client_low_persistent
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.yolo2msghub_client_low_persistent.state == 'on' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Activity decreasing at
          {{ states.sensor.yolo2msghub_event.attributes.yolo2msghub.date | int | timestamp_custom("%a %b %d %I:%M %p") }}
        notification_id: yolo2msghub_client_low
        message: >
          Current: {{ states.sensor.yolo2msghub_client_count.state }} clients; 
          average {{ states.sensor.yolo2msghub_client_count_mean.state }} clients;
          average stdev {{ states.sensor.yolo2msghub_client_count_stdev_mean.state }} clients
    - service: mqtt.publish
      data_template:
        topic: 'status/yolo2msghub_clients/download/stdev'
        retain: false
        payload: >
          {{ states.sensor.yolo2msghub_client_count_stdev_mean.attributes }}

- id: yolo2msghub_client_high_persistent
  alias: yolo2msghub_client_high_persistent
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.yolo2msghub_client_high_persistent
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.yolo2msghub_client_high_persistent.state == 'on' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Activity increasing at
          {{ states.sensor.yolo2msghub_event.attributes.yolo2msghub.date | int | timestamp_custom("%a %b %d %I:%M %p") }}
        notification_id: yolo2msghub_client_high
        message: >
          Current: {{ states.sensor.yolo2msghub_client_count.state }} clients; 
          average {{ states.sensor.yolo2msghub_client_count_mean.state }} clients;
          average stdev {{ states.sensor.yolo2msghub_client_count_stdev_mean.state }} clients
    - service: mqtt.publish
      data_template:
        topic: 'status/yolo2msghub_clients/download/stdev'
        retain: false
        payload: >
          {{ states.sensor.yolo2msghub_client_count_stdev_mean.attributes }}

###
### STARTUP
###

- id: startup_counter
  alias: startup_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.startup_event
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.startup_state.state == 'on' }}
  action:
    - service: counter.increment
      entity_id: counter.startup_counter

- id: startup_client_low
  alias: startup_client_low
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.startup_client_low
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.startup_client_low.state == 'on' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Activity low at
          {{ states.sensor.startup_event.attributes.startup.date | int | timestamp_custom("%a %b %d %I:%M %p") }}
        notification_id: startup_client_low
        message: >
          Current: {{ states.sensor.startup_client_count.state }} clients; 
          average {{ states.sensor.startup_client_count_mean.state }} clients;
          stdev {{ states.sensor.startup_client_count_statistics_mean.attributes.standard_deviation }} clients
    - service: mqtt.publish
      data_template:
        topic: 'status/startup_clients/count'
        retain: false
        payload: >
          {{ states.sensor.startup_client_count_statistics_mean.attributes }}

- id: startup_client_low_dismiss
  alias: startup_client_low_dismiss
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.startup_client_low
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.startup_client_low.state == 'off' }}
  action:
    - service: persistent_notification.dismiss
      data_template:
        notification_id: startup_client_low

- id: startup_client_high
  alias: startup_client_high
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.startup_client_high
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.startup_client_high.state == 'on' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Activity high at
          {{ states.sensor.startup_event.attributes.startup.date | int | timestamp_custom("%a %b %d %I:%M %p") }}
        notification_id: startup_client_high
        message: >
          Current: {{ states.sensor.startup_client_count.state }} clients; 
          average {{ states.sensor.startup_client_count_mean.state }} clients;
          stdev {{ states.sensor.startup_client_count_statistics_mean.attributes.standard_deviation }} clients
    - service: mqtt.publish
      data_template:
        topic: 'status/startup_clients/count'
        retain: false
        payload: >
          {{ states.sensor.startup_client_count_statistics_mean.attributes }}

- id: startup_client_high_dismiss
  alias: startup_client_high_dismiss
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.startup_client_high
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.startup_client_high.state == 'off' }}
  action:
    - service: persistent_notification.dismiss
      data_template:
        notification_id: startup_client_high

- id: startup_client_low_persistent
  alias: startup_client_low_persistent
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.startup_client_low_persistent
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.startup_client_low_persistent.state == 'on' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Activity decreasing at
          {{ states.sensor.startup_event.attributes.startup.date | int | timestamp_custom("%a %b %d %I:%M %p") }}
        notification_id: startup_client_low
        message: >
          Current: {{ states.sensor.startup_client_count.state }} clients; 
          average {{ states.sensor.startup_client_count_mean.state }} clients;
          average stdev {{ states.sensor.startup_client_count_stdev_mean.state }} clients
    - service: mqtt.publish
      data_template:
        topic: 'status/startup_clients/count/stdev'
        retain: false
        payload: >
          {{ states.sensor.startup_client_count_stdev_mean.attributes }}

- id: startup_client_high_persistent
  alias: startup_client_high_persistent
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.startup_client_high_persistent
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.startup_client_high_persistent.state == 'on' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Activity increasing at
          {{ states.sensor.startup_event.attributes.startup.date | int | timestamp_custom("%a %b %d %I:%M %p") }}
        notification_id: startup_client_high
        message: >
          Current: {{ states.sensor.startup_client_count.state }} clients; 
          average {{ states.sensor.startup_client_count_mean.state }} clients;
          average stdev {{ states.sensor.startup_client_count_stdev_mean.state }} clients
    - service: mqtt.publish
      data_template:
        topic: 'status/startup_clients/count/stdev'
        retain: false
        payload: >
          {{ states.sensor.startup_client_count_stdev_mean.attributes }}

###
### SDR2MSGHUB
###

- id: sdr2msghub_counter
  alias: sdr2msghub_counter
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.sdr2msghub_event
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.sdr2msghub_state.state == 'on' }}
  action:
    - service: counter.increment
      entity_id: counter.sdr2msghub_counter
