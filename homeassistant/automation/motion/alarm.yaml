###
# homeassistant/automation/motion/alarm.yaml
###

### WAKE

## begin
#

# synchronize input_datetime to sensor converted (begin and end)

- id: motion_alarm_wake_begin_datetime
  alias: motion_alarm_wake_begin_datetime
  mode: single
  initial_state: on
  trigger:
    - platform: state
      entity_id: sensor.motion_alarm_wake_begin_datetime
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {% set s = states('input_number.motion_alarm_wake_begin') %}
          {{ s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s != null }}
      - condition: template
        value_template: >-
          {% set s = states('sensor.motion_alarm_wake_begin_datetime') %}
          {{ s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s != null }}
  action:
    - service: input_datetime.set_datetime
      data_template:
        entity_id: input_datetime.motion_alarm_wake_begin
        time: >-
          {{ states('sensor.motion_alarm_wake_begin_datetime')|string }}

- id: motion_alarm_wake_end_datetime
  alias: motion_alarm_wake_end_datetime
  mode: single
  initial_state: on
  trigger:
    - platform: state
      entity_id: sensor.motion_alarm_wake_end_datetime
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {% set s = states('input_number.motion_alarm_wake_end') %}
          {{ s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s != null }}
      - condition: template
        value_template: >-
          {% set s = states('sensor.motion_alarm_wake_end_datetime') %}
          {{ s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s != null }}
  action:
    - service: input_datetime.set_datetime
      data_template:
        entity_id: input_datetime.motion_alarm_wake_end
        time: >-
          {{ states('sensor.motion_alarm_wake_end_datetime')|string }}

# wake seconds since midnight
- id: motion_schedule_wake_detected
  alias: motion_schedule_wake_detected
  mode: single
  initial_state: on
  trigger:
    platform: state
    entity_id: 
      - sensor.motion_detected_person_counter_today
      - input_number.motion_alarm_wake_begin
      - input_number.motion_alarm_wake_end
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {% set s = states('sensor.motion_detected_person_counter_today') %}
          {% set b = states('input_number.motion_alarm_wake_begin') %}
          {% set e = states('input_number.motion_alarm_wake_end') %}
          {% set d = as_timestamp(states.sensor.motion_detected_person_counter_today.last_updated)|int - as_timestamp(now().replace(hour=0).replace(minute=0).replace(second=0))|int %}
          {{ s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s != null and
             b|lower != 'none' and b|lower != 'unavailable' and b|lower != 'unknown' and b != null and
             e|lower != 'none' and e|lower != 'unavailable' and e|lower != 'unknown' and e != null and
             s|int > 0 and d >= b|int and d <= e|int }}
  action:
    - service: python_script.set_state
      data_template:
        entity_id: sensor.motion_schedule_wake_detected
        state: >-
          {% set d = s_timestamp(states.sensor.motion_detected_person_counter_today.last_updated)|int - as_timestamp(now().replace(hour=0).replace(minute=0).replace(second=0))|int %}
          {{ d }}
 
# notify
- id: motion_schedule_wake_notify
  alias: motion_schedule_wake_notify
  mode: single
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_schedule_wake_detected
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {% set s = states('sensor.motion_schedule_wake_detected') %}
          {{ s|lower != 'none' and s|lower != 'unavailable' and s|lower != 'unknown' and s != null and s|int > 0 }}
  action:
    - service: light.turn_on
      data_template:
        entity_id: all
    - service: persistent_notification.create
      data_template:
        title: >-
          {% set s = states('sensor.motion_schedule_wake_detected') %}
          {{ 'Good morning at: ' + s|int|timestamp_custom("%a %b %d %I:%M:%S %p") }}
        notification_id: >-
          wakeup
        message: >-
          {{ 'Person detected after: ' + states('input_datetime.motion_alarm_wake_begin')|string + '; now: ' + now()|string }}
