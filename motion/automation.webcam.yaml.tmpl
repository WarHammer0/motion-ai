###
### automation ${MOTION_CAMERA}
###

###
# end
###

- id: motion_end_counter_${MOTION_CAMERA}
  alias: motion_end_counter_${MOTION_CAMERA}
  initial_state: on
  trigger:
    platform: state
    entity_id: camera.motion_event_end_${MOTION_CAMERA}
    #entity_id: binary_sensor.motion_end_${MOTION_CAMERA}
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_end_${MOTION_CAMERA}','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_end_counter_${MOTION_CAMERA}

- id: motion_end_snapshot_${MOTION_CAMERA}
  alias: motion_end_snapshot_${MOTION_CAMERA}
  initial_state: on
  trigger:
    platform: state
    entity_id: camera.motion_event_end_${MOTION_CAMERA}
    #entity_id: binary_sensor.motion_end_${MOTION_CAMERA}
  condition:
    condition: template
    value_template: >-
      {{ is_state('binary_sensor.motion_end_${MOTION_CAMERA}','on') }}
  action:
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_end-${MOTION_CAMERA}.jpg' }}
        entity_id: >-
          {{ 'camera.motion_event_end_${MOTION_CAMERA}' }}

###
# annotated
###

- id: motion_annotated_counter_${MOTION_CAMERA}
  alias: motion_annotated_counter_${MOTION_CAMERA}
  initial_state: on
  trigger:
    platform: state
    entity_id: camera.motion_event_annotated_${MOTION_CAMERA}
    #entity_id: binary_sensor.motion_annotated_${MOTION_CAMERA}
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_annotated_${MOTION_CAMERA}','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_annotated_counter_${MOTION_CAMERA}

- id: motion_annotated_snapshot_${MOTION_CAMERA}
  alias: motion_annotated_snapshot_${MOTION_CAMERA}
  initial_state: on
  trigger:
    platform: state
    entity_id: camera.motion_event_annotated_${MOTION_CAMERA}
    #entity_id: binary_sensor.motion_annotated_${MOTION_CAMERA}
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_annotated_${MOTION_CAMERA}','on') }}
  action:
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_annotated-${MOTION_CAMERA}.jpg' }}
        entity_id: >-
          {{ 'camera.motion_event_annotated_${MOTION_CAMERA}' }}

###
# detected
###

- id: motion_detected_counter_${MOTION_CAMERA}
  alias: motion_detected_counter_${MOTION_CAMERA}
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_annotated_counter_${MOTION_CAMERA}
    #entity_id: binary_sensor.motion_detected_${MOTION_CAMERA}
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_detected_${MOTION_CAMERA}','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_detected_counter_${MOTION_CAMERA}

- id: motion_detected_snapshot_${MOTION_CAMERA}
  alias: motion_detected_snapshot_${MOTION_CAMERA}
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_annotated_counter_${MOTION_CAMERA}
    #entity_id: binary_sensor.motion_detected_${MOTION_CAMERA}
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_detected_${MOTION_CAMERA}','on') }}
  action:
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_detected-${MOTION_CAMERA}.jpg' }}
        entity_id: >-
          {{ 'camera.motion_event_annotated_${MOTION_CAMERA}' }}

###
# detected_entity
###

- id: motion_detected_entity_counter_${MOTION_CAMERA}
  alias: motion_detected_entity_counter_${MOTION_CAMERA}
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_detected_counter_${MOTION_CAMERA}
    #entity_id: binary_sensor.motion_detected_entity_${MOTION_CAMERA}
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_detected_entity_${MOTION_CAMERA}','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_detected_entity_counter_${MOTION_CAMERA}

- id: motion_detected_entity_snapshot_${MOTION_CAMERA}
  alias: motion_detected_entity_snapshot_${MOTION_CAMERA}
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_detected_counter_${MOTION_CAMERA}
    #entity_id: binary_sensor.motion_detected_entity_${MOTION_CAMERA}
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_detected_entity_${MOTION_CAMERA}','on') }}
  action:
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_detected_entity-${MOTION_CAMERA}.jpg' }}
        entity_id: >-
          {{ 'camera.motion_event_annotated_${MOTION_CAMERA}' }}

###
# found
###

- id: motion_tracker_webcam_found_${MOTION_CAMERA}
  alias: motion_tracker_webcam_found_${MOTION_CAMERA}
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_status_camera_found_${MOTION_CAMERA}
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_tracker_webcam_found','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: mqtt.publish
      data_template:
        topic: 'motion/tracker/webcam/${MOTION_CAMERA}'
        retain: true
        payload: >-
          { "topic":"motion/tracker/webcam/${MOTION_CAMERA}", "payload":"home", "date":{{ (now().timestamp()|int) }} }

- id: motion_reset_found_webcam_${MOTION_CAMERA}
  alias: motion_reset_found_webcam_${MOTION_CAMERA}
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_status_camera_found_${MOTION_CAMERA}
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_reset_found_webcam','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_end-${MOTION_CAMERA}.jpg' }}
        entity_id: >-
          {{ 'camera.motion_testsignal' }}
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_annotated-${MOTION_CAMERA}.jpg' }}
        entity_id: >-
          {{ 'camera.motion_testsignal' }}
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_detected-${MOTION_CAMERA}.jpg' }}
        entity_id: >-
          {{ 'camera.motion_testsignal' }}
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_detected_entity-${MOTION_CAMERA}.jpg' }}
        entity_id: >-
          {{ 'camera.motion_testsignal' }}

###
# lost
###

- id: motion_tracker_webcam_lost_${MOTION_CAMERA}
  alias: motion_tracker_webcam_lost_${MOTION_CAMERA}
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_status_camera_lost_${MOTION_CAMERA}
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_tracker_webcam_lost','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: mqtt.publish
      data_template:
        topic: 'motion/tracker/webcam/${MOTION_CAMERA}'
        retain: true
        payload: >-
          { "topic":"motion/tracker/webcam/${MOTION_CAMERA}", "payload":"not_home", "date":{{ (now().timestamp()|int) }} }

- id: motion_reset_lost_webcam_${MOTION_CAMERA}
  alias: motion_reset_lost_webcam_${MOTION_CAMERA}
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_status_camera_lost_${MOTION_CAMERA}
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_reset_lost_webcam','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_end-${MOTION_CAMERA}.jpg' }}
        entity_id: >-
          {{ 'camera.motion_nosignal' }}
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_annotated-${MOTION_CAMERA}.jpg' }}
        entity_id: >-
          {{ 'camera.motion_nosignal' }}
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_detected-${MOTION_CAMERA}.jpg' }}
        entity_id: >-
          {{ 'camera.motion_nosignal' }}
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_detected_entity-${MOTION_CAMERA}.jpg' }}
        entity_id: >-
          {{ 'camera.motion_nosignal' }}

###
# notify
###

- id: motion_status_camera_notify_found_${MOTION_CAMERA}
  alias: motion_status_camera_notify_found_${MOTION_CAMERA}
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_status_camera_found_${MOTION_CAMERA}
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_status_camera_notify','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state and trigger.to_state != none and trigger.to_state.state|lower != 'unknown' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Camera ${MOTION_CAMERA} found
        notification_id: >
          ${MOTION_CAMERA}
        message: >-
          Camera ${MOTION_CAMERA} was {{ trigger.from_state.state }};
          found at {{ now().timestamp()|int|timestamp_custom("%a %b %d @ %I:%M %p") | default(null) }}

- id: motion_status_camera_notify_lost_${MOTION_CAMERA}
  alias: motion_status_camera_notify_lost_${MOTION_CAMERA}
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_status_camera_lost_${MOTION_CAMERA}
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_status_camera_notify','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state and trigger.to_state != none and trigger.to_state.state|lower != 'unknown' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Camera ${MOTION_CAMERA} lost
        notification_id: >
          ${MOTION_CAMERA}
        message: >-
          Camera ${MOTION_CAMERA} was {{ trigger.from_state.state }};
          lost at {{ now().timestamp()|int|timestamp_custom("%a %b %d @ %I:%M %p") | default(null) }}

